<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:worldkit="worldkit.*"
		 width="100%" height="100%">
	<fx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			
			import nape.util.ShapeDebug;
			
			import worldkit.core.DrawingArea;
			import worldkit.core.RunWorld;
			import worldkit.data.BodyDO;
			import worldkit.data.PolygonDO;
			import worldkit.data.RectangleDO;
			import worldkit.data.ShapeDO;
			import worldkit.data.WorldDO;
			import worldkit.gfx.GfxElement;
			import worldkit.gfx.GraphicFactory;
			import worldkit.gfx.PhysicsFactory;
			
			public static var mainArea:UIComponent = new UIComponent;
			public static  var mainDebug:ShapeDebug = new ShapeDebug(100,100);

			private var runWorld2:RunWorld;
			
			protected function brcDrawingArea_creationCompleteHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				mainArea.addChild(DrawingArea.Instance);
				brcDrawingArea.addElement(mainArea);
			}
			
			protected function createRectangle(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
			/* 	var sp:GfxElement  = GraphicFactory.drawRectangle(0,0,100,100)[0] as GfxElement;
				sp.x = 100;
				sp.y = 100;
				DrawingArea2.Instance.addChild(sp); */
				
				
				
				 var bodyDO:BodyDO = new BodyDO(100,100,BodyDO.STATIC);
				
				var shapes:Vector.<ShapeDO> = new Vector.<ShapeDO>();
				var rectangle:RectangleDO = new RectangleDO(PhysicsFactory.getRectanglePoints(0,0,100,100));
				shapes.push(rectangle);
				bodyDO.shapes = shapes;
				
				var sprite:GfxElement = PhysicsFactory.createGraphicFromBody(bodyDO);
				DrawingArea.Instance.addToWorld(sprite);
				//mainDebug
				
			}
			
			protected function run(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				//DrawingArea.Instance.run = !DrawingArea.Instance.run;
			//	DrawingArea.Instance.makeEverythingClean();
				runWorld();
			}
			
			public function runWorld():void{
				runWorld2 = new RunWorld(DrawingArea.Instance.world);
				mainArea.addChild(runWorld2);
				DrawingArea.Instance.visible = false;
				//runWorld.initWorld(DrawingArea2.Instance.world);
			}
			
			protected function stop(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				DrawingArea.Instance.visible = true;
				mainArea.removeChild(runWorld2);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:BorderContainer left="5" right="5" top="5" height="40">
		<s:Button x="2" y="4" width="34" label="R" click="createRectangle(event)"/>
		<s:Button x="1088" y="10" width="55" label="Run" click="run(event)"/>
		<s:Button x="1155" y="10" width="55" label="Stop" click="stop(event)"/>
		<worldkit:BodyConf x="100" y="0">
		</worldkit:BodyConf>
	</s:BorderContainer>
	<s:BorderContainer left="6" right="6" top="50" bottom="5" id="brcDrawingArea" addedToStage="brcDrawingArea_creationCompleteHandler(event)">
	</s:BorderContainer>
</s:Group>
